Dynamic Programming is an algorithmic technique with the following properties.
It is mainly an optimization over plain recursion. 
Wherever we see a recursive solution that has repeated calls for the same inputs, we can optimize it using Dynamic Programming.
The idea is to simply store the results of subproblems so that we do not have to re-compute them when needed later. 
This simple optimization typically reduces time complexities from exponential to polynomial.
Some popular problems solved using Dynamic Programming are:
Fibonacci Numbers, Diff Utility (Longest Common Subsequence), Bellmanâ€“Ford Shortest Path, Floyd Warshall, Edit Distance and Matrix Chain Multiplication.
